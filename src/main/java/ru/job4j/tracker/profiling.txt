Профилирование проводится при помощи инструмента "jconsole".
В качестве сборщика мусора установлен -  Parallel GC.

******************************************************************************************************************
При запуске программы и вызова "jconsole", программа выдавала в "спокойном состояниии" следующие значения:
Heap Memory Usage - Used: ~32 mb, Max: 3.8 gb
Threads: 16 live threads
CPU Usage: 1-2%
Classes: 2498

После создания 1 000 000 заявок при помощи команды "Create many items" данные изменились следующим образом:
Heap Memory Usage - Used: ~195 mb
Threads: 14 live threads
Classes: 2587

После ввода команды "Delete all items" значение Heap Memory Usage поднялось до 234 mb.
После удаления всех заявок объекты лишаются своих ссылок, и помечаются сборщиком мусора, как объекты готовые
к удалению, т.е. в куче находятся 1 000 000 объектов, которые будут удалены при "Major GC".

Повторил добавление еще 1 000 000 заявок. Используемая память достигла значений 380-385 mb. Classes - 2628.
Live threads - 14.
Повторил удаление все заявок. Используемая память сначала дошла до 400-410 mb, затем произошла major GC, из памяти
были удалены объекты без ссылок(мертвые объекты). Значение используемой памяти уменьшились до ~200 mb.

******************************************************************************************************************

При добавлении 100 000 000 заявок получилось выйти за пределы памяти.
JVM выбросило иСключение java.lang.OutOfMemoryError: Java heap space и программа прекратила работу.
При данном событии, значения Heap Usage, Thread, Classes обнулились.


